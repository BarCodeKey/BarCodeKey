apply plugin: 'com.android.application'
android {
    compileSdkVersion 20
    buildToolsVersion '20.0.0'
    defaultConfig {
        applicationId 'app.barcodekey'
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            testCoverageEnabled = true
        }
    }
    /*
    lintOptions {
        abortOnError false
    }
    */
    /* ULKOISEN SKANNAUSKIRJASTON JA ZXING-KIRJASTON VÄLISIÄ RUTINOITA VARTEN
    dexOptions {
        preDexLibraries = false
    }
    */
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

/* ULKOISTA SKANNAUSKIRJASTOA VARTEN
repositories {
    flatDir {
        dirs 'libs'
    }
}
*/

dependencies {
    compile fileTree(dir: '../libs', include: ['*.jar'])
    // ULKOINEN SKANNIKIRJASTO compile 'info.vividcode.android.zxing:capture-activity:2.3.0-1.2'
}
